Перем ИмяВремФайла, srv, res, file;

// -------------------------------- Autoupdate ---------------------------------------------------

Процедура ПроверитьНаличиеОбновления() Экспорт
	fupdate = Ложь;
	HttpСоединение = Новый HTTPСоединение(srv);
	HttpЗапрос = Новый HTTPЗапрос(res);
	Попытка
		ИмяВремФайла = ПолучитьИмяВременногоФайла("epf");
		мОтвет = HttpСоединение.Получить(HttpЗапрос, ИмяВремФайла);
		Если мОтвет.КодСостояния <> 200 Тогда
			Статус = "bad_connect";
		КонецЕсли;
	Исключение
		Статус = "bad_connect";
	КонецПопытки;
	Если Статус = "bad_connect" Тогда
		//Предупреждение(НСтр("ru = 'Не могу скачать обработку!'; en = 'Bad internet connection!'"), 10);
		Возврат; //Молчание золото
	Иначе
		ДанныеНовые = Новый ДвоичныеДанные(ИмяВремФайла);
		
		Если Прав(file,3) = "tmp" Тогда
			//Если это врешняя обработка
			ДанныеСтарые = Новый ДвоичныеДанные(ИмяВремФайла);
			Если Метаданные.Справочники.Найти("ВнешниеОбработки") <> Неопределено Тогда
				СсылкаНаОбработку = Справочники.ВнешниеОбработки.НайтиПоНаименованию(ЭтотОбъект.Метаданные().Синоним);
				Если НЕ СсылкаНаОбработку.Пустая() Тогда
					ДанныеСтарые = СсылкаНаОбработку.ХранилищеВнешнейОбработки.Получить();
				КонецЕсли;
			КонецЕсли;
		Иначе
			ДанныеСтарые = Новый ДвоичныеДанные(file); //если не найдем - не обновляем
		КонецЕсли;	
		Если ДанныеСтарые <> ДанныеНовые Тогда
 			//Если MD5(ИмяВремФайла) <> MD5(file) Тогда //возможно хэш функции
			fupdate = Истина;
			ЭтаФорма.Заголовок = "Самообновляемая обработка - требуется обновление!";
			Ответ = Вопрос("Обновить обработку?", РежимДиалогаВопрос.ДаНет,10,КодВозвратаДиалога.Да,"Действие");
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ОбновитьОбработку();
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ОбновитьОбработку()
	
	Если ИмяВремФайла = "" Тогда
		Возврат; //файл не был скачан
	КонецЕсли;	
	
	//Если это врешняя обработка
	Если Прав(file,3) = "tmp" Тогда
		Данные = Новый ДвоичныеДанные(ИмяВремФайла);
		Если ЗаписатьВнешниюОбработкуВБазу(Данные) Тогда
			ЭтаФорма.Закрыть();
			Если Метаданные.Справочники.Найти("ВнешниеОбработки") <> Неопределено Тогда
				СсылкаНаОбработку = Справочники.ВнешниеОбработки.НайтиПоНаименованию(ЭтотОбъект.Метаданные().Синоним);
				Если НЕ СсылкаНаОбработку.Пустая() Тогда
					//Переоткрытие формы из дополнительных обработок
					ИмяВремФайла2 = ПолучитьИмяВременногоФайла();
					ДвоичныеДанные = СсылкаНаОбработку.ХранилищеВнешнейОбработки.Получить();
					ДвоичныеДанные.Записать(ИмяВремФайла2);
					НоваяФорма = ВнешниеОбработки.ПолучитьФорму(ИмяВремФайла2);
					НоваяФорма.Открыть();
					УдалитьФайлы(ИмяВремФайла);
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
	Иначе
		//Это просто обработка файл
		ПереместитьФайл(ИмяВремФайла, file); 
		ЭтаФорма.Закрыть();
		//переоткрытие той-же формы не работает - откроем копию
		file2 = ПолучитьИмяВременногоФайла("epf");
		КопироватьФайл(file, file2);
		НоваяФорма = ВнешниеОбработки.ПолучитьФорму(file2);
		НоваяФорма.Открыть();
		НоваяФорма.file = file;
	КонецЕсли;
	ЭтаФорма.Заголовок = "Самообновляемая обработка";
КонецПроцедуры

Функция ЗаписатьВнешниюОбработкуВБазу( Данные )
	Результат = Ложь;
	Если Метаданные.Справочники.Найти("ВнешниеОбработки") <> Неопределено Тогда
		СсылкаНаОбработку = Справочники.ВнешниеОбработки.НайтиПоНаименованию(ЭтотОбъект.Метаданные().Синоним);
		Если НЕ СсылкаНаОбработку.Пустая() Тогда
			ВнешийОбъект = СсылкаНаОбработку.ПолучитьОбъект();
			Хранилище = Новый ХранилищеЗначения(Данные);
			ВнешийОбъект.ХранилищеВнешнейОбработки = Хранилище;
			ВнешийОбъект.Записать();
			Результат = Истина;
		КонецЕсли;
	КонецЕсли;	
	Возврат Результат;	
КонецФункции

// ------------------------------------------------------------------------------------------------------------

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Настройки = ВосстановитьЗначение("ДополнительнаяОбработкаПанельПоказателейв1С"); 
	ЗагрузкаМакетов();
	
	//первые настройки в базе
	НашелНастройкиВБазе = Ложь;
	//НашелНастройкиВБазе = Истина; //Сброс автозагрузки последних
	stepsX = 3;
	stepsY = 3;
	Если НЕ НашелНастройкиВБазе И Настройки <> Неопределено Тогда
		ЗагрузитьДанныеИзСтруктуры( Настройки, widgets );	
		Если Настройки.Свойство("online_email") Тогда
			online_email = Настройки.online_email; 					
		КонецЕсли;
	КонецЕсли;	
	file = ОбработкаОбъект.ИспользуемоеИмяФайла;
	ПодключитьОбработчикОжидания("ПроверитьНаличиеОбновления",1,Истина);
	ОбновитьОтображение();
КонецПроцедуры

//По умолчанию сохраняем
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Настройки = Новый Структура;
	Настройки.Вставить("widgets", widgets.Выгрузить());
	Настройки.Вставить("Значения", Значения);
	Настройки.Вставить("code1C", code1C);
	Настройки.Вставить("RefLibs", RefLibs);
	Настройки.Вставить("codeHTML", codeHTML);
	Настройки.Вставить("stepsX", stepsX);
	Настройки.Вставить("stepsY", stepsY);
	Настройки.Вставить("online_email", online_email);
	СохранитьЗначение("ДополнительнаяОбработкаПанельПоказателейв1С", Настройки)
КонецПроцедуры

Процедура ОбновитьОтображение( РежимНастройки = Ложь )
	Если РежимНастройки Тогда
		html_view = НарисоватьВиджеты(widgets_settings, stepsX_Settings, stepsY_Settings, Истина, mode_select);
		Заголовок = "НАСТРОЙКА. Панель показателей."; 
		ЭлементыФормы.html_settings.УстановитьТекст(html_view);
	Иначе
		html_view = НарисоватьВиджеты(widgets, stepsX, stepsY, Ложь, Ложь);
		Заголовок = "Панель показателей.";
		ЭлементыФормы.html.УстановитьТекст(html_view);
	КонецЕсли;
КонецПроцедуры

Процедура Настройка_Открыть(Кнопка)
	stepsX_Settings = stepsX;
	stepsY_Settings = stepsY;
	widgets_settings.Очистить();
	Для каждого widget из widgets Цикл
		set_widget = widgets_settings.Добавить();
		ЗаполнитьЗначенияСвойств(set_widget, widget);
	КонецЦикла;
	Панель.ТекущаяСтраница = Панель.Страницы.Settings;
	ОбновитьОтображение( Истина );
КонецПроцедуры

Процедура Настройка_Применить(Кнопка)
	stepsX = stepsX_Settings;
	stepsY = stepsY_Settings;
	widgets.Очистить();
	Для каждого set_widget из widgets_settings Цикл
		widget = widgets.Добавить();
		ЗаполнитьЗначенияСвойств(widget, set_widget);
	КонецЦикла;
	Панель.ТекущаяСтраница = Панель.Страницы.View;
	widgets_settings.Очистить();
	widget_select = 0;
	ОбновитьОтображение();
КонецПроцедуры

Процедура Настройка_Отменить(Кнопка)
	widget_select = 0;
	Панель.ТекущаяСтраница = Панель.Страницы.View;
	//ЭлементыФормы.ПанельРазмерПозиция.ТекущаяСтраница = ЭлементыФормы.ПанельРазмерПозиция.Страницы.СтраницаПустая;
КонецПроцедуры

Процедура Настройка_ОчиститьВсе(Кнопка)
	widget_select = 0;
	widgets_settings.Очистить();
	ОбновитьОтображение(Истина);
КонецПроцедуры

Процедура Элемент_Добавить(Кнопка)
	ЭлементыФормы.НадписьВыбора.Заголовок = "ВЫБЕРИТЕ ЭЛЕМЕНТ ДЛЯ ВСТАВКИ";
	mode_select = Истина;
	type_storage = 0;
	html = НарисоватьВиджеты(widgets_type, stepsX_widgets, stepsY_widgets, Истина);
	ЭлементыФормы.html_wigets.УстановитьТекст(html);
	ЭлементыФормы.КоманднаяПанельВыбора.Кнопки.Предыдущий.Доступность = Ложь;
	ЭлементыФормы.КоманднаяПанельВыбора.Кнопки.Следующий.Доступность = Ложь;
	Панель.ТекущаяСтраница = Панель.Страницы.new_widgets;
КонецПроцедуры

Процедура Элемент_Выделить(Кнопка)
	widget_select = widget_select + 1;
	Если widget_select > widgets_settings.Количество() Тогда
		widget_select = 0;
		//ЭлементыФормы.ПанельРазмерПозиция.ТекущаяСтраница = ЭлементыФормы.ПанельРазмерПозиция.Страницы.СтраницаПустая;
	Иначе 
		//ЭлементыФормы.ПанельРазмерПозиция.ТекущаяСтраница = ЭлементыФормы.ПанельРазмерПозиция.Страницы.СтраницаДействия;
	КонецЕсли;
	ОбновитьОтображение(Истина);
КонецПроцедуры

Процедура Элемент_ОтменаДобавления(Кнопка)
	Если mode_select Тогда
		mode_select = Ложь;
		Панель.ТекущаяСтраница = Панель.Страницы.Settings;
		ОбновитьОтображение(Истина);
	Иначе
		Панель.ТекущаяСтраница = Панель.Страницы.View;
		ОбновитьОтображение();	
	КонецЕсли;
	ЭлементыФормы.КоманднаяПанельВыбора.Кнопки.Предыдущий.Доступность = Истина;
	ЭлементыФормы.КоманднаяПанельВыбора.Кнопки.Следующий.Доступность = Истина;
КонецПроцедуры

Процедура html_wigetsonclick(Элемент, pEvtObj)
	//Выбор отдельного виджета
	Если mode_select Тогда
		widget = ПолучитьВиджетНажатия(pEvtObj, stepsX_widgets, stepsY_widgets, widgets_type);
		Если widget <> Неопределено Тогда
			one_type = widget.type; 
			one_code1C = widget.code1C;
			one_code1Click = widget.code1Click;
			one_codeDraw = widget.codeDraw;
			one_codeLib = widget.codeLib;
			Панель.ТекущаяСтраница = Панель.Страницы.Settings;
			ОбновитьОтображение(Истина);	
		КонецЕсли;
	Иначе
	
	КонецЕсли;
	ЭлементыФормы.КоманднаяПанельВыбора.Кнопки.Предыдущий.Доступность = Истина;
	ЭлементыФормы.КоманднаяПанельВыбора.Кнопки.Следующий.Доступность = Истина;
КонецПроцедуры

Процедура Модуль1С_Открыть(Кнопка)
	ЭлементыФормы.code1C.УстановитьТекст(code1C);
	ЭлементыФормы.RefLibs.УстановитьТекст(RefLibs);
	ЭлементыФормы.codeHTML.УстановитьТекст(codeHTML);
	Панель.ТекущаяСтраница = Панель.Страницы.Code1C;
КонецПроцедуры

Процедура Модуль1С_Закрыть(Кнопка)
	code1C = ЭлементыФормы.code1C.ПолучитьТекст();
	RefLibs = ЭлементыФормы.RefLibs.ПолучитьТекст();
	codeHTML = ЭлементыФормы.codeHTML.ПолучитьТекст();
	Панель.ТекущаяСтраница = Панель.Страницы.Settings;
	ОбновитьОтображение(Истина);
КонецПроцедуры

Процедура Данные_Экспорт(Кнопка)
	Если online И ЗначениеЗаполнено(online_email) Тогда
		type_storage = 2; //сохранение пользовательских данных
		mode_select = Ложь;
		html = ВыбратьИзБиблиотеки();
		Панель.ТекущаяСтраница = Панель.Страницы.new_widgets;
		widget_select = 0;
		ЭлементыФормы.НадписьВыбора.Заголовок = "ВЫБОР ЗАМЕНЫ ЭЛЕМЕНТА";
		ЭлементыФормы.html_wigets.УстановитьТекст(html);	
	Иначе
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.ПолноеИмяФайла = "Настройки.json";
		ДиалогОткрытияФайла.Фильтр = "JSON (*.json)|*.json";
		ДиалогОткрытияФайла.Заголовок = "Выберите файл сохранения";
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			Текст = Новый ЗаписьТекста(ДиалогОткрытияФайла.ПолноеИмяФайла);
			СтрокаJSON = ПолучитьДанныеВСтрокуJSON();
			Текст.ЗаписатьСтроку(СтрокаJSON);
			Текст.Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Данные_Импорт(Кнопка)
	Если online И ЗначениеЗаполнено(online_email) Тогда
		type_storage = 1; //загрузка пользовательских данных
		mode_select = Ложь;
		html = ВыбратьИзБиблиотеки();
		Панель.ТекущаяСтраница = Панель.Страницы.new_widgets;
		widget_select = 0;
		ЭлементыФормы.НадписьВыбора.Заголовок = "ВЫБЕРИТЕ ЭКРАН ДЛЯ ЗАГРУЗКИ";
		ЭлементыФормы.html_wigets.УстановитьТекст(html);
	Иначе
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
		ДиалогОткрытияФайла.Фильтр = "JSON (*.json)|*.json";
		ДиалогОткрытияФайла.Заголовок = "Выберите файл";
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			Текст = Новый ЧтениеТекста(ДиалогОткрытияФайла.ПолноеИмяФайла);
			СтрокаJSON = Текст.Прочитать();
			Текст.Закрыть();
			Структура = ПрочитатьJSONВСтруктуру(СтрокаJSON);
			ЗагрузитьДанныеИзСтруктуры(Структура, widgets);
		КонецЕсли;
	КонецЕсли;
	ОбновитьОтображение();
КонецПроцедуры

Процедура ПанельВидДанные_ИмпортИзГалереи(Кнопка)
	Если online И ЗначениеЗаполнено(online_email) Тогда
		type_storage = 0; //данные из галерее
		mode_select = Ложь;
		html = ВыбратьИзБиблиотеки();
		Если СокрЛП(html) <> "" Тогда
			Панель.ТекущаяСтраница = Панель.Страницы.new_widgets;
			ЭлементыФормы.НадписьВыбора.Заголовок = "ВЫБЕРИТЕ ЭКРАН ДЛЯ ЗАГРУЗКИ";
			ЭлементыФормы.html_wigets.УстановитьТекст(html);
		КонецЕсли;
	Иначе
		Предупреждение("Возможность есть только в режиме "+Символы.ПС+"соединения с интернетом");
	КонецЕсли;
КонецПроцедуры

Процедура onlineПриИзменении(Элемент)
	Если online И ЗначениеЗаполнено(online_email) Тогда
		кнпПроверкаНажатие(Элемент);
	КонецЕсли;	
КонецПроцедуры

//При изменении e-mail
Процедура ПолеВвода3ПриИзменении(Элемент)
	кнпПроверкаНажатие(Элемент);	
КонецПроцедуры


//Проверка состояния на сайте
Процедура кнпПроверкаНажатие(Элемент)
	Режим = РежимДиалогаВопрос.ДаНет;
	Статус = ПроверитьАктуальность();
	Если Статус = "bad_connect" Тогда
		ЭлементыФормы.online.ЦветФона = WebЦвета.Красный;
		ЭлементыФормы.online.Подсказка = "Нет соединения с интернетом";
	ИначеЕсли Статус = "bad_user" Тогда
		ЭлементыФормы.online.Подсказка = "Нет пользователя c таким e-mail на сайте sikuda.ru";
		ЭлементыФормы.online.ЦветФона =  WebЦвета.Желтый;
		Если Вопрос( ЭлементыФормы.online.Подсказка + Символы.ПС + "Перейти к регистрации пользователя", Режим, 0) = КодВозвратаДиалога.Да Тогда
			ЗапуститьПриложение("http://widget.sikuda.ru/wp-login.php?action=register&user_email="+online_email+"&user_login="+online_email);
		КонецЕсли;
	Иначе
		ЭлементыФормы.online.ЦветФона = WebЦвета.Зеленый;
		ЭлементыФормы.online.Подсказка = "";
	//ИначеЕсли Статус = "fill_wallet" Тогда	
	//	ЭлементыФормы.строкаСтатуса.Заголовок = "Не заполнен номер кошелька Яндекса";
	//	ЭлементыФормы.строкаСтатуса.ЦветФона = WebЦвета.Оранжевый;
	//	Если Вопрос( ЭлементыФормы.строкаСтатуса.Заголовок + Символы.ПС + "Зайти на сайт и ввести номер кошелека Яндекса", Режим, 0) = КодВозвратаДиалога.Да Тогда
	//		ЗапуститьПриложение("http://sikuda.ru/wp-admin/profile.php#sikuda_yandexwallet");
	//	КонецЕсли; 
	//ИначеЕсли Статус = "" Тогда
	//	ЭлементыФормы.строкаСтатуса.Заголовок = "Нет актуальных оплат";
	//	ЭлементыФормы.строкаСтатуса.ЦветФона = WebЦвета.ОранжевоКрасный;
	//	Если Вопрос( ЭлементыФормы.строкаСтатуса.Заголовок + Символы.ПС + "Перейти на сайт для просмотра статуса", Режим, 0) = КодВозвратаДиалога.Да Тогда
	//		ЗапуститьПриложение("http://sikuda.ru/wp-admin/profile.php#sikuda_yandexwallet");
	//	КонецЕсли; 
	//Иначе
	//	ЭлементыФормы.строкаСтатуса.Заголовок = "Оплата до "+Статус;
	//	ЭлементыФормы.строкаСтатуса.ЦветФона = WebЦвета.Зеленый;
	КонецЕсли;
КонецПроцедуры

Процедура Элемент_Применить(Кнопка)
	widget = widgets_settings.Найти(one_id,"id");
	Если widget <> Неопределено Тогда
		widget.code1C = ЭлементыФормы.code1C_one.ПолучитьТекст();
		widget.codeDraw = ЭлементыФормы.one_codeDraw.ПолучитьТекст();
		widget.code1Click =  ЭлементыФормы.code1Click_one.ПолучитьТекст();
		widget.type = one_type;
		widget.codeLib = one_codeLib;
		widget.onServer = one_onServer;
		ОбновитьОтображение(Истина);
	КонецЕсли;
	Панель.ТекущаяСтраница = Панель.Страницы.Settings;
КонецПроцедуры

Процедура Элемент_Удалить(Кнопка)
	widget = widgets_settings.Найти(one_id,"id");
	Если widget <> Неопределено Тогда
		widgets_settings.Удалить(widgets_settings.Индекс(widget));
	КонецЕсли;	
	Панель.ТекущаяСтраница = Панель.Страницы.Settings;
	ОбновитьОтображение(Истина);
КонецПроцедуры

Процедура Элемент_Отмена(Кнопка)
	Панель.ТекущаяСтраница = Панель.Страницы.Settings;
КонецПроцедуры

Процедура ПанельОбновитьОтображение(Кнопка)
	ОбновитьОтображение(Ложь);
КонецПроцедуры

Процедура ПриИзмененииStepsXY(Элемент)
	Если stepsX_settings <= 0 Тогда stepsX_settings = 1; КонецЕсли;
	Если stepsY_settings <= 0 Тогда stepsY_settings = 1; КонецЕсли;
	ОбновитьОтображение( Истина );
КонецПроцедуры

Процедура html_settingsonclick(Элемент, pEvtObj)
	Если mode_select Тогда
		Координаты = ПолучитьНаКоординатыжатогоВиджета(pEvtObj, stepsX_Settings, stepsY_Settings);
		Если ЗначениеЗаполнено(Координаты) Тогда
			widget = widgets_settings.Добавить();
			widget.id = Новый УникальныйИдентификатор();
			widget.type = one_type; 
			widget.left = Координаты.left;
			widget.top = Координаты.top;
			widget.right = Координаты.left;
			widget.bottom = Координаты.top;
			widget.code1C = one_code1C;
			widget.code1Click = one_codeClick1C;
			widget.codeDraw = one_codeDraw;
			widget.codeLib = one_codeLib;

		КонецЕсли;	
		mode_select = Ложь;
		ОбновитьОтображение(Истина);
		Возврат;
	КонецЕсли;	
	
	//Редактирование существующего
	widget = ПолучитьВиджетНажатия(pEvtObj, stepsX_Settings, stepsY_Settings, widgets_settings);
	Если widget <> Неопределено Тогда
		//Настройка виджета
		Панель.ТекущаяСтраница = Панель.Страницы.Set_one;
		ЭлементыФормы.code1C_one.УстановитьТекст(widget.code1C);
		ЭлементыФормы.one_codeDraw.УстановитьТекст(widget.codeDraw);
		ЭлементыФормы.code1Click_one.УстановитьТекст(widget.code1Click);
		one_id = widget.id;
		one_type = widget.type;
		one_onServer = widget.onServer;
		one_codeLib = widget.codeLib;
		Элемент_Выполнить(Неопределено);
	КонецЕсли
КонецПроцедуры

Процедура htmlonclick(Элемент, pEvtObj)
	widget = ПолучитьВиджетНажатия(pEvtObj, stepsX, stepsY, widgets);
	Если widget <> Неопределено Тогда
		КодРасшифровки = widget.code1Click;
		Если ЗначениеЗаполнено(КодРасшифровки) Тогда
			СтандартнаяОбработка = Ложь;
			КодРасшифровки = ОбработатьВвестиЗначение1С(КодРасшифровки);	
			Попытка
				Выполнить(КодРасшифровки);
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			ОбновитьОтображение();
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура Элемент_Выполнить(Элемент)
	one_html = НарисоватьОдинВиджет( ЭлементыФормы.code1C_one.ПолучитьТекст(), ЭлементыФормы.one_codeDraw.ПолучитьТекст(), "0", "0", "(width)", "(height)", one_onServer, Ложь, Истина, one_codeLib);
	ЭлементыФормы.html_one.УстановитьТекст(one_html);
КонецПроцедуры

Процедура loadLibsНажатие(Элемент)
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Фильтр = "text (*.txt)|*.txt";
	ДиалогОткрытияФайла.Заголовок = "Выберите файл для загрузки";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		Текст = Новый ЧтениеТекста(ДиалогОткрытияФайла.ПолноеИмяФайла);
		one_codeLib = Текст.Прочитать();
		Текст.Закрыть();
	КонецЕсли;
КонецПроцедуры

Процедура clearLibsНажатие(Элемент)
	one_codeLib = "";
КонецПроцедуры

Процедура кпнРазмерПозизияИзменить(Элемент)
	Если widget_select = 0 Тогда Возврат; КонецЕсли;
	строкаВиджета = widgets_settings[widget_select - 1];
	Если строкаВиджета <> Неопределено Тогда
		top = строкаВиджета.top;
		bottom = строкаВиджета.bottom;
		left = строкаВиджета.left;
		right = строкаВиджета.right;
		//Размер
		Если Элемент.Имя = "кпнРазмерВверхУвел" Тогда	
			Если (top > 0) Тогда top = top - 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнРазмерВверхУм" Тогда	
			Если (top < bottom) Тогда top = top + 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнРазмерНизУвел" Тогда	
			Если (bottom < (stepsY_Settings-1)) Тогда bottom = bottom + 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнРазмерНизУм" Тогда	
			Если (top < bottom ) Тогда bottom = bottom - 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнРазмерПравоУвел" Тогда	
			Если (right < (stepsX_Settings-1) ) Тогда right = right + 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнРазмерПравоУм" Тогда		
			Если (left < right) Тогда right = right - 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнРазмерЛевоУвел" Тогда	
			Если (left > 0) Тогда left = left - 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнРазмерЛевоУм" Тогда	
			Если (left < right) Тогда left = left + 1; КонецЕсли;
		КонецЕсли;
		//Позиция
		Если Элемент.Имя = "кпнПозВверх" Тогда	
			Если (top > 0) Тогда top = top - 1; bottom = bottom - 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнПозНиз" Тогда	
			Если (bottom < (stepsY_Settings-1)) Тогда top = top + 1; bottom = bottom + 1 КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнПозПраво" Тогда	
			Если (right < (stepsX_Settings-1) ) Тогда right = right + 1; left = left + 1; КонецЕсли;
		ИначеЕсли Элемент.Имя = "кпнПозЛево" Тогда	
			Если (left > 0) Тогда left = left - 1; right = right - 1; КонецЕсли;
		КонецЕсли;
		
		строкаВиджета.top = top; 	
		строкаВиджета.bottom = bottom;	
		строкаВиджета.left = left;	
		строкаВиджета.right = right;
		ОбновитьОтображение(Истина);
	КонецЕсли;
КонецПроцедуры

//Обработка функции ВвестиЗначение1С(Имя, Подсказка) на ВвестиЗначение(для совместимости 8.3)
Функция ОбработатьВвестиЗначение1С(КодРасшифровки)
	Поз = Найти( КодРасшифровки, "ВвестиЗначение1С");
	Пока Поз > 0 Цикл
		ПозЛев = Поз;
		Поз = Поз+СтрДлина("ВвестиЗначение1С");
		//Если Поз > СтрДлина(КодРасшифровки) Тогда Прервать;
		Символ = Сред(КодРасшифровки,Поз,1);
		ЭтоИмя = Истина;
		Имя = "";
		Подсказка = "";
		Пока Символ <> ")" Цикл
			Если Символ <> """" И Символ <> "(" Тогда
				Если Символ = "," Тогда
					ЭтоИмя = Ложь;
				Иначе
					Если ЭтоИмя Тогда
						Имя = Имя + Символ;
					Иначе
						Подсказка = Подсказка + Символ;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	  
			Поз = Поз + 1;	
			Символ = Сред(КодРасшифровки,Поз,1);	
		КонецЦикла;	  
		НоваяФункция = "
		| Значение = Значения["""+Имя+"""];
		| Если ВвестиЗначение(Значение, """+Подсказка+""") Тогда
		|     Значения.Вставить("""+Имя+""", Значение); 
		| КонецЕсли;";
		КодРасшифровки = Лев(КодРасшифровки, ПозЛев-1) +  НоваяФункция + Прав(КодРасшифровки, СтрДлина(КодРасшифровки)-Поз);
		Поз = Найти( КодРасшифровки, "ВвестиЗначение1С");
	КонецЦикла;
	Возврат КодРасшифровки;
КонецФункции

Процедура КоманднаяПанель1Следующий(Кнопка)
	widget_select = widget_select + 1;
	html = ВыбратьИзБиблиотеки();
	Если СокрЛП(html) <> "" Тогда
		ЭлементыФормы.html_wigets.УстановитьТекст(html);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1Предыдущий(Кнопка)
	Если widget_select < 0 Тогда
		widget_select = 0;
		Возврат;
	КонецЕсли;	
	widget_select = widget_select - 1;
	html = ВыбратьИзБиблиотеки();
	Если СокрЛП(html) <> "" Тогда
		ЭлементыФормы.html_wigets.УстановитьТекст(html);
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанельВыбораВыбрать(Кнопка)
	Если type_storage = 2 Тогда //Выбор страницы для сохранения
		ЕстьВыбор = Ложь;
		Текст = "";
		Если ВвестиСтроку( Текст, "Введите имя графика для сохранения") Тогда
			ЕстьВыбор = Истина;
		КонецЕсли;
		Если ЕстьВыбор Тогда
			HttpСоединение = Новый HTTPСоединение( "widget.sikuda.ru",,,,,5);
			HttpЗапрос = Новый HTTPЗапрос("/_save.php?email="+online_email+"&title="+Текст+"&offset="+Формат(widget_select,"ЧДЦ=; ЧН=0; ЧГ=0"));
			СтрокаJSON = ПолучитьДанныеВСтрокуJSON();
			HttpЗапрос.УстановитьТелоИзСтроки(СтрокаJSON, КодировкаТекста.UTF8);
			мОтвет = HttpСоединение.Записать(HttpЗапрос);
		КонецЕсли;
	Иначе
		stepsX = stepsX_load;
		stepsY = stepsY_load;
		widgets.Загрузить(widgets_load.Выгрузить());
	КонецЕсли;
	Панель.ТекущаяСтраница = Панель.Страницы.View;
	ОбновитьОтображение();
КонецПроцедуры

Процедура КоманднаяПанель1Удалить(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура htmlДокументСформирован(Элемент)
	// Вставить содержимое обработчика.
	HTMLHeight=Элемент.Высота;
	HTMLWidth=Элемент.Ширина;
КонецПроцедуры




Значения = Новый Структура;
srv = "widget.sikuda.ru";
res = "/wp-content/uploads/dashboardClassic.epf";